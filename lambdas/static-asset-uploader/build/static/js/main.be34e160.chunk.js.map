{"version":3,"sources":["services/get-fragments.js","services/api.js","pages/Home.jsx","pages/GettingStarted.jsx","services/state.js","services/api-catalog.js","pages/Dashboard.jsx","services/self.js","components/ApisMenu.jsx","components/SwaggerUiLayout.jsx","pages/Apis.jsx","components/AlertPopup.jsx","components/SignIn.jsx","components/Register.jsx","components/SignOut.jsx","components/NavBar.jsx","index.js"],"names":["fragments","observable","loadHtml","path","fragment","jsx","fetch","then","response","text","parsedMarkdown","frontmatter","Object","objectSpread","react_default","a","createElement","with_html_default","escapeHtml","source","body","renderers","attributes","cachedClient","link","_ref","href","props","objectWithoutProperties","test","assign","target","rel","Link","to","HomePage","observer","Fragment","Segment","vertical","textAlign","style","color","backgroundColor","padding","margin","Image","centered","size","src","Header","as","Home","header","tagline","Button","positive","gettingStartedButton","apiListButton","Container","fluid","GettingStarted","awsRegion","window","config","region","cognitoRegion","cognitoUserPoolId","userPoolId","cognitoIdentityPoolId","identityPoolId","cognitoClientId","userPoolClientId","initApiGatewayClient","arguments","length","undefined","accessKeyId","secretAccessKey","sessionToken","apigClientFactory","newClient","accessKey","secretKey","apiGatewayClient","Promise","resolve","poller","setInterval","clearInterval","AWS","store","api","apiList","catalog","storeCache","map","usagePlan","apis","_","cloneDeep","addUsagePlanToApis","reduce","acc","concat","createApiList","forEach","specificLogo","id","stage","logo","headers","Accept","redirect","ok","updateSubscriptionStatus","subscriptions","computed","usagePlanId","subscribed","find","sub","catalogPromiseCache","subscriptionsPromiseCache","apiKeyPromiseCache","updateAllUserData","bustCache","all","updateCatalogAndApisList","updateSubscriptions","apiKeyOrPromise","apiKey","get","_ref3","data","value","updateApiKey","catalogOrPromise","_ref$data","catch","subscriptionsOrPromise","_ref2","mapUsageByDate","usage","usedOrRemaining","apiKeyDates","keys","items","apiKeyId","apiKeyUsage","startDate","dateParts","split","year","month","day","apiKeyDate","Date","setHours","usedOrRemainingIndex","Array","isArray","date","setDate","getDate","item","mapApiKeyUsageByDate","dates","index","dailyUsage","sort","confirmMarketplaceSubscription","token","put","loadUsage","canvasId","start","end","getFullYear","getMonth","toJSON","result","ctx","document","getElementById","JSON","stringify","chartConfig","type","labels","d","parseInt","toLocaleDateString","datasets","label","lineTension","borderColor","borderWidth","pointRadius","pointHoverRadius","options","scales","yAxes","ticks","beginAtZero","Chart","error","cognitoUser","userPool","Grid","container","Row","Column","paddingTop","background","border","borderRadius","Divider","filter","firstApiName","swagger","info","title","extraApiCount","List","Item","key","width","widescreen","marginBottom","Popup","trigger","cursor","content","on","position","Message","toString","Loader","active","poolData","UserPoolId","ClientId","isAuthenticated","getCognitoLoginKey","login","email","password","authenticationDetails","AuthenticationDetails","Username","Password","CognitoUser","Pool","CognitoUserPool","reject","authenticateUser","onSuccess","credentials","CognitoIdentityCredentials","IdentityPoolId","Logins","defineProperty","getIdToken","getJwtToken","refresh","console","post","onFailure","logout","signOut","localStorage","clear","_React$Component","ApisMenu","_getPrototypeOf2","_this","classCallCheck","this","_len","args","_key","possibleConstructorReturn","getPrototypeOf","call","apply","isActive","apiId","apiIdInPath","params","inherits","createClass","_this2","_this$props","Menu","inverted","attached","React","Component","InfoReplacement","specSelectors","basePath","host","externalDocs","className","display","flex","marginRight","fontWeight","version","SwaggerUiLayout_SubscriptionButtons","SubscriptionButtons","state","onClick","delete","SwaggerLayoutPlugin","components","InfoContainer","ApisPage","updateApi","selectIt","thisApi","getApi","match","swaggerUiConfig","dom_id","plugins","supportedSubmitMethods","spec","onComplete","uiHandler","preauthorizeApiKey","SwaggerUI","errorHeader","errorBody","overflow","components_ApisMenu","icon","Icon","name","circular","Content","AlertPopup","isVisible","message","handleDismiss","setState","hidden","negative","floating","onDismiss","SignIn","isSubmitting","signedIn","errorMessage","isOpen","open","close","handleChange","event","handleLogin","preventDefault","e","Redirect","Modal","onOpen","onClose","Form","onSubmit","loading","Input","onChange","autoComplete","Actions","primary","Register","handleRegister","attributeList","signUp","err","register","SignOut","forceUpdate","cloneElement","NavBar","authed","borderless","paddingRight","APIs","SignOut_SignOut","SignIn_SignIn","Register_Register","App","getCurrentUser","getSession","session","hashRoute","location","hash","substring","history","pushState","BrowserRouter","components_NavBar","AlertPopup_AlertPopup","Switch","Route","exact","component","Dashboard","Apis","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.be34e160.chunk.js","sourcesContent":["import React from 'react'\n\n// react-router\nimport { Link } from 'react-router-dom'\n\n// mobx\nimport { observable } from 'mobx'\n\n// markdown parsing\nimport frontmatter from 'front-matter'\nimport Markdown from 'react-markdown/with-html'\n\nexport const fragments = observable({})\n\nloadHtml('/custom-content/content-fragments/GettingStarted.md', 'GettingStarted')\nloadHtml('/custom-content/content-fragments/Home.md', 'Home')\nloadHtml('/custom-content/content-fragments/APIs.md', 'APIs')\n\n/**\n * \n * Pre-load the custom-content markdown, parses its frontmatter, and renders it as JSX. This method is asynchronous and doesn't actually return anything -- instead, it acts on a MobX Observable -- the fragment. The fragment is an object with a `jsx` property that maps to the rendered component, and any number of other properties collected from the front-matter.\n * \n * @param {String} path   Path to the file to load in. Should be a markdown file.\n * @param {String} fragment   Name of the fragment. Determines where rendered data gets stored.\n * \n * @returns {Object} \n */\nfunction loadHtml(path, fragment) {\n  // if we want to display a loading indicator, this would be where\n  fragments[fragment] = { jsx: () => null }\n\n  fetch(path).then(response => response.text().then(text => {\n    let parsedMarkdown = frontmatter(text)\n\n    fragments[fragment] = {\n      jsx: () => (\n        <Markdown \n          escapeHtml={false} \n          source={parsedMarkdown.body}\n          renderers={renderers}\n        />\n      ),\n      ...parsedMarkdown.attributes\n    }\n  }))\n}\n\n/**\n * Renderers is a map of node type to component. \n * \n * In this case, we only override links. Any time react-markdown tries to render a link, it'll render this component. Normal links will work, but the cause a full page reload. We don't want that, so we can replacing them with react-router Links. However, replacing external links with react-router Links causes them to not work at all. We don't want that either, so we attempt to determine if a link is external or not, and use `Link` or `a` appropriately.\n */\nconst renderers = {\n  link: ({ href, ...props }) => {\n    // if absolute url, use an `a` tag\n    // https://stackoverflow.com/a/19709846/4060061\n    if (/^(?:[a-z]+:)?\\/\\//i.test(href))\n      return <a href={href} target=\"_blank\" rel=\"noopener noreferrer\" {...props} />\n\n    // replace links with react-router-dom tags so that they \n    return <Link to={href} {...props} />\n  }\n}","import AWS from 'aws-sdk'\n\nexport const awsRegion = window.config.region\nexport const cognitoRegion = window.config.region\nexport const cognitoUserPoolId = window.config.userPoolId\nexport const cognitoIdentityPoolId = window.config.identityPoolId\nexport const cognitoClientId = window.config.userPoolClientId\n\nAWS.config.region = cognitoRegion\n\nlet cachedClient\n\nexport function initApiGatewayClient({ accessKeyId, secretAccessKey, sessionToken } = {}) {\n  cachedClient = window.apigClientFactory.newClient({\n    accessKey: accessKeyId,\n    secretKey: secretAccessKey,\n    sessionToken: sessionToken,\n    region: awsRegion\n  })\n}\n\nexport function apiGatewayClient() {\n  if (cachedClient) return Promise.resolve(cachedClient)\n  \n  return new Promise(resolve => {\n    const poller = setInterval(() => {\n      if (cachedClient) {\n        clearInterval(poller)\n        resolve(cachedClient)\n      }\n    }, 100)\n  })\n}\n","import React from 'react'\n\n// mobx\nimport { observer } from 'mobx-react'\n\n// fragments\nimport { fragments } from 'services/get-fragments'\n\n// react-router\nimport { Link } from 'react-router-dom'\n\n// semantic-ui\nimport { Header, Segment, Container, Image, Button } from 'semantic-ui-react'\n\nexport const HomePage = observer(() => (\n  <React.Fragment>\n    <Segment vertical textAlign='center' style={{ color: \"whitesmoke\", backgroundColor: \"slategray\", padding: \"40px 0px\", margin: \"0px !important\" }}>\n      <Image centered size='small' src='/custom-content/home-image.png' />\n      <Header as='h1' style={{ color: \"whitesmoke\" }}>{fragments.Home.header}</Header>\n      <p>{fragments.Home.tagline}</p>\n      <Link to=\"/getting-started\"><Button positive>{fragments.Home.gettingStartedButton}</Button></Link>\n      <Link to=\"/apis\" style={{ padding: \"0.78571429em 1.5em 0.78571429em\", color: \"white\" }}>{fragments.Home.apiListButton}</Link>\n    </Segment>\n    <Segment vertical style={{ padding: \"40px 0px\", margin: \"0 !important\" }}>\n      <Container fluid text textAlign='justified'>\n        <fragments.Home.jsx />\n      </Container>\n    </Segment>\n  </React.Fragment>\n))\n\nexport default HomePage\n","import React from 'react'\n\n// mobx\nimport { observer } from 'mobx-react'\n\n// fragments\nimport { fragments } from 'services/get-fragments'\n\n// semantic-ui\nimport { Container } from 'semantic-ui-react'\n\nexport default observer(() => (\n  <Container style={{ padding: \"40px\" }}>\n    <fragments.GettingStarted.jsx />\n  </Container>\n))\n","import { observable, computed } from 'mobx'\nimport _ from 'lodash'\n\nimport { getSubscribedUsagePlan } from 'services/api-catalog'\n\nexport const store = observable({\n  api: undefined,\n  apiList: undefined,\n\n  /**\n   * We have a bunch of side-effects we need to run when we're setting `catalog` and \n   * `subscriptions`. That's accomplished by using getters and setters. We're storing\n   * the actual data in `storeCache` so that people can't update `catalog` and \n   * `subscriptions` without hitting the side-effects.\n   */\n\n  // Catalog side-effects\n  // 1 - update each api to have a usagePlan object nested in them\n  // 2 - update the apiList based on the catalog \n  // 3 - update the subscribed status of each api\n  set catalog(catalog = []) {\n    storeCache.catalog = addUsagePlanToApis(catalog)\n    store.apiList = createApiList(storeCache.catalog)\n    fetchApiImage(store.apiList)\n    updateSubscriptionStatus()\n\n    return storeCache.catalog\n  },\n  get catalog() { return storeCache.catalog },\n\n  // Subscription side-effects\n  // 1 - update the subscribed status of each api\n  set subscriptions(subscriptions = []) {\n    storeCache.subscriptions = subscriptions\n    updateSubscriptionStatus()\n\n    return storeCache.subscriptions\n  },\n  get subscriptions() { return storeCache.subscriptions },\n}, {\n  catalog: computed,\n  subscriptions: computed\n})\n\n// This is the cache for the actual catalog and subscriptions. DO NOT MODIFY and DO NOT USE.\nconst storeCache = observable({\n  catalog: [],\n  subscriptions: []\n})\n\n/**\n * A function that takes an input catalog and performs some side-effects on it.\n * \n * - Makes sure each api has a non-recursive 'usagePlan' object\n * - recalculates the `apiList`\n */\nfunction addUsagePlanToApis(catalog) {\n  return catalog.map(usagePlan => {\n    usagePlan.apis = usagePlan.apis.map(api => {\n      api.usagePlan = _.cloneDeep(usagePlan)\n      // remove the apis from the cloned usagePlan so we don't go circular\n      delete api.usagePlan.apis\n      return api\n    })\n\n    return usagePlan\n  })\n}\n\nfunction createApiList(catalog) {\n  return catalog.reduce((acc, usagePlan) => acc.concat(usagePlan.apis), [])\n}\n\nfunction fetchApiImage() {\n  store.apiList.forEach(api => {\n    let specificLogo = `/custom-content/api-logos/${api.id}_${api.stage}.png`\n\n    // fetch automatically follows redirects; setting redirect to `manual` prevents this\n    // we need to prevent it so that we can accurately determine if the image exists\n    if (!api.logo)\n      fetch(specificLogo, { headers: { Accept: \"image/png\" }, redirect: \"manual\" }).then(response => {\n        if (response.ok)\n          api.logo = specificLogo\n\n        else api.logo = '/custom-content/api-logos/default.png'\n      })\n  })\n}\n\n/**\n * A helper function that simple re-builds the subscribed status for each api in the catalog.\n * \n * Should be run every time either the catalog updates or the \n */\nfunction updateSubscriptionStatus() {\n  if (storeCache.catalog)\n    storeCache.catalog.forEach(usagePlan => {\n      let subscribed = !!getSubscribedUsagePlan(usagePlan.id)\n      usagePlan.subscribed = subscribed\n      \n      usagePlan.apis.forEach(api => api.subscribed = subscribed)\n  })\n}\n\nexport default store\n","import { apiGatewayClient } from './api'\nimport { store } from './state'\n\n/* Catalog and API Utils */\n\n/**\n * \n * Does all operations to get user data at once.\n * \n * @param {Boolean} bustCache=true   Ignore the cache and re-make the calls? Defaults to true.\n */\nexport function updateAllUserData(bustCache = true) {\n  return Promise.all([\n    updateCatalogAndApisList(bustCache),\n    updateSubscriptions(bustCache),\n    updateApiKey(bustCache)\n  ])\n}\n\n/**\n * \n * Update the catalog for the current user. Both request and response are cached, so unless the cache is busted, this should only ever make one network call.\n * \n * @param {Boolean} [bustCache=false]   Ignore the cache and re-make the network call. Defaults to false.\n * \n */\nexport function updateCatalogAndApisList(bustCache = false) {\n  let catalogOrPromise = store.catalog.length ? store.catalog : catalogPromiseCache\n  if (!bustCache && catalogOrPromise) return Promise.resolve(catalogOrPromise)\n\n  return catalogPromiseCache = apiGatewayClient()\n    .then(apiGatewayClient => apiGatewayClient.get('/catalog', {}, {}, {}))\n    .then(({ data = [] }) => (store.catalog = data))\n    .catch(() => {\n      // catch a failed request and set catalog to a blank array\n      return (store.catalog = [])\n    })\n}\nlet catalogPromiseCache // WARNING: Don't touch this. Should only be used by updateCatalogAndApisList.\n\n/**\n * Return the API with the provided apiId. Can also provide the special strings \"FIRST\" or \"ANY\" to get the first API returned. Can select the api returned as a side-effect.\n * \n * @param {String} apiId   An apiId or the special strings 'FIRST' or 'ANY'. 'FIRST' and 'ANY' both return the first api encountered.\n * @param {Boolean} [selectIt=false]   If true, sets the found API as the current 'selected' API.\n */\nexport function getApi(apiId, selectIt = false) {\n  return updateCatalogAndApisList()\n    .then(() => {\n      let thisApi\n  \n      if (store.apiList.length) {\n        if (apiId === 'ANY' || apiId === 'FIRST') {\n          thisApi = store.apiList[0]\n        }\n\n        else {\n          thisApi = store.apiList.find(api => api.id === apiId)\n        }\n      }\n\n      if (selectIt) store.api = thisApi\n\n      return thisApi\n    })\n}\n\n/* Subscription Utils */\n\n/**\n * Fetch and update subscriptions store. Uses caching to determine if it should actually fetch or return the stored result.\n * \n * @param {Boolean} [bustCache=false]   Ignore the cache and re-make the network call. Defaults to false.\n */\nexport function updateSubscriptions(bustCache = false) {\n  let subscriptionsOrPromise = store.subscriptions.length ? store.subscriptions : subscriptionsPromiseCache\n  if (!bustCache && subscriptionsOrPromise) return Promise.resolve(subscriptionsOrPromise)\n\n  return subscriptionsPromiseCache = apiGatewayClient()\n    .then(apiGatewayClient => apiGatewayClient.get('/subscriptions', {}, {}, {}))\n    .then(({ data }) => (store.subscriptions = data))\n}\nlet subscriptionsPromiseCache // WARNING: Don't touch this. Should only be used by updateCatalogAndApisList.\n\nexport function getSubscribedUsagePlan(usagePlanId) {\n  return store.subscriptions.find(sub => sub.id === usagePlanId)\n}\n\nexport function subscribe(usagePlanId) {\n  return apiGatewayClient()\n    .then(apiGatewayClient => apiGatewayClient.put('/subscriptions/' + usagePlanId, {}, {}))\n    .then(() => updateSubscriptions(true))\n}\n\nexport function unsubscribe(usagePlanId) {\n  return apiGatewayClient()\n    .then(apiGatewayClient => apiGatewayClient.delete(`/subscriptions/${usagePlanId}`, {}, {}))\n    .then(() => updateSubscriptions(true))\n}\n\n/**\n * \n * Fetches and updates the apiKey in the store. Both request and response are cached, so unless the cache is busted, this should only ever make one network call.\n * \n */\nexport function updateApiKey(bustCache) {\n  let apiKeyOrPromise = store.apiKey ? store.apiKey : apiKeyPromiseCache\n  if (!bustCache && apiKeyOrPromise) return Promise.resolve(apiKeyOrPromise)\n\n  return apiGatewayClient()\n    .then(apiGatewayClient => apiGatewayClient.get('/apikey', {}, {}, {}))\n    .then(({data}) => (store.apiKey = data.value))\n}\nlet apiKeyPromiseCache\n\nexport function fetchUsage(usagePlanId) {\n  const date = new Date()\n  const start = new Date(date.getFullYear(), date.getMonth(), 1).toJSON().split('T')[0]\n  const end = new Date().toJSON().split('T')[0]\n  return apiGatewayClient()\n    .then(apiGatewayClient => apiGatewayClient.get('/subscriptions/' + usagePlanId + '/usage', { start, end }, {}))\n}\n\nexport function mapUsageByDate(usage, usedOrRemaining) {\n  const apiKeyDates = {}\n  Object.keys(usage.items).forEach(apiKeyId => {\n    apiKeyDates[apiKeyId] = mapApiKeyUsageByDate(usage.items[apiKeyId], usage.startDate, usedOrRemaining)\n  })\n  \n  const dates = {}\n  Object.keys(apiKeyDates).forEach((apiKeyId, index) => {\n    const apiKeyUsage = apiKeyDates[apiKeyId]\n    apiKeyUsage.forEach(dailyUsage => {\n      const date = dailyUsage[0]\n      const value = dailyUsage[1]\n      \n      if (!dates[date])\n      dates[date] = 0\n      dates[date] += value\n    })\n  })\n  \n  const usageByDate = Object.keys(dates).sort().map(date => [date, dates[date]])\n  \n  return usageByDate\n}\n\nfunction mapApiKeyUsageByDate(apiKeyUsage, startDate, usedOrRemaining) {\n  const dateParts = startDate.split('-')\n  const year = dateParts[0]\n  const month = dateParts[1]\n  const day = dateParts[2]\n  const apiKeyDate = new Date(year, month - 1, day)\n  apiKeyDate.setHours(0, 0, 0, 0)\n  const usedOrRemainingIndex = usedOrRemaining === 'used'\n  ? 0\n  : 1\n  \n  if (apiKeyUsage && !Array.isArray(apiKeyUsage[0]))\n  apiKeyUsage = [apiKeyUsage]\n  \n  return apiKeyUsage.map((usage) => {\n    const date = apiKeyDate.setDate(apiKeyDate.getDate())\n    const item = [date, usage[usedOrRemainingIndex]]\n    apiKeyDate.setDate(apiKeyDate.getDate() + 1)\n    return item\n  })\n}\n\n/* Marketplace integration */\n\nexport function confirmMarketplaceSubscription(usagePlanId, token) {\n  if (!usagePlanId) {\n    return\n  }\n  \n  return apiGatewayClient()\n    .then(apiGatewayClient => apiGatewayClient.put('/marketplace-subscriptions/' + usagePlanId, {}, {\"token\" : token}))\n}","import React from 'react'\n\nimport { Grid, Header, Popup, Loader, Message, List, Divider } from 'semantic-ui-react'\n\nimport Chart from 'chart.js'\nimport { fetchUsage, mapUsageByDate } from 'services/api-catalog'\n\nimport { observer } from 'mobx-react'\n\nimport { store } from 'services/state'\n\nimport _ from 'lodash'\n\nfunction loadUsage(usagePlan, canvasId) {\n  fetchUsage(usagePlan.id)\n    .then((result) => {\n      const data = mapUsageByDate(result.data, 'used')\n      const ctx = document.getElementById(canvasId)\n\n      let oldDataString = JSON.stringify(_.get(usagePlan, 'usage.data', {}))\n      let newDataString = JSON.stringify(data)\n\n      if (oldDataString !== newDataString)\n        usagePlan.usage = { data }\n\n      const chartConfig = {\n        type: 'line',\n        data: {\n          labels: data.map(d => new Date(parseInt(d[0], 10)).toLocaleDateString()),\n          datasets: [\n            {\n              label: 'Usage',\n              data: data.map(d => d[1]),\n              lineTension: 0,\n              backgroundColor: 'rgba(255, 99, 132, 0.2)',\n              borderColor: 'rgba(255,99,132,1)',\n              borderWidth: 2,\n              pointRadius: 4,\n              pointHoverRadius: 6\n            }\n          ]\n        },\n        options: { scales: { yAxes: [ { ticks: { beginAtZero: true } } ] } }\n      }\n\n      new Chart(ctx, chartConfig)\n    })\n    .catch((error) => {\n      usagePlan.usage = { error }\n    })\n}\n\nexport default observer(() => {\n  return (\n    <Grid container>\n      <Grid.Row>\n        <Grid.Column style={{ paddingTop: \"40px\" }}>\n            <Header size=\"medium\">API Key</Header>\n            <code style={{\n              background: \"black\",\n              border: \"1px solid gray\",\n              padding: \"7px 8px\",\n              color: \"lightgray\",\n              borderRadius: \"5px\"\n            }}>\n              {store.apiKey}\n            </code>\n        </Grid.Column>\n      </Grid.Row>\n      <Divider />\n      <Grid.Row>\n\n      {store.catalog\n        .filter(usagePlan => usagePlan.subscribed)\n        .map((usagePlan, index) => {\n\n        let firstApiName = usagePlan.apis[0].swagger.info.title\n        let extraApiCount = usagePlan.apis.length - 1\n        let apiList = usagePlan.apis.reduce((acc, api) => acc.concat(\n          <List.Item key={api.id}>{api.swagger.info.title}</List.Item>\n        ), [])\n        let canvasId = `api-usage-chart-container-${usagePlan.id}` + index\n\n        loadUsage(usagePlan, canvasId)\n\n        return (\n          <Grid.Column width={16} widescreen={8} key={usagePlan.id} style={{ marginBottom: \"40px\" }}>\n            <Header size=\"medium\">\n              Usage for {extraApiCount ? (\n                <Popup\n                  trigger={ <a style={{ cursor: \"pointer\" }}>{firstApiName} and {extraApiCount} more...</a> }\n                  content={ <List> {apiList} </List> }\n                  on={['hover', 'click']}\n                  position=\"right center\"\n                />\n              ) : (\n                firstApiName\n              )}\n            </Header>\n              \n              { !usagePlan.usage ? (\n                <Loader active />\n              ) : ( \n                usagePlan.error ? (\n                  <Message error content={usagePlan.error.toString()} />\n                ) : null\n              )}\n              <canvas id={canvasId} />\n          </Grid.Column>\n        )\n      })}\n      </Grid.Row>\n    </Grid>\n  )\n})\n","import AWS from 'aws-sdk'\nimport { CognitoUserPool, CognitoUser, AuthenticationDetails } from 'amazon-cognito-identity-js'\n\n// services\nimport { store } from 'services/state'\nimport { initApiGatewayClient, apiGatewayClient } from 'services/api'\nimport { updateAllUserData } from 'services/api-catalog'\nimport { cognitoIdentityPoolId, cognitoUserPoolId, cognitoClientId, cognitoRegion } from 'services/api'\n\nconst poolData = {\n  UserPoolId: cognitoUserPoolId,\n  ClientId: cognitoClientId\n}\n\nlet cognitoUser\nlet userPool\n\nexport function isAuthenticated() {\n  return cognitoUser\n}\n\nfunction getCognitoLoginKey() {\n  return `cognito-idp.${cognitoRegion}.amazonaws.com/${cognitoUserPoolId}`\n}\n\nexport function init() {\n  // attempt to refresh credentials from active session\n  userPool = new CognitoUserPool(poolData)\n  cognitoUser = userPool.getCurrentUser()\n\n  if (cognitoUser !== null) {\n    cognitoUser.getSession(function(err, session) {\n      if (err) {\n        logout()\n        console.error(err)\n        return\n      }\n\n      const cognitoLoginKey = getCognitoLoginKey()\n      const Logins = {}\n      Logins[cognitoLoginKey] = session.getIdToken().getJwtToken()\n      AWS.config.credentials = new AWS.CognitoIdentityCredentials({\n        IdentityPoolId: cognitoIdentityPoolId,\n        Logins: Logins\n      })\n\n      AWS.config.credentials.refresh((error) => {\n        if (error) {\n          logout()\n          console.error(error)\n        } else {\n          initApiGatewayClient(AWS.config.credentials)\n          updateAllUserData()\n        }\n      })\n    })\n  } else {\n    initApiGatewayClient()\n  }\n}\n\nexport function register(email, password) {\n  localStorage.clear()\n  const attributeList = []\n  return new Promise((resolve, reject) => {\n    userPool.signUp(email, password, attributeList, null, (err, result) => {\n      if (err) {\n        reject(err)\n      } else {\n        resolve(login(email, password))\n      }\n    })\n  })\n}\n\nexport function login(email, password) {\n    const authenticationDetails = new AuthenticationDetails({\n      Username: email,\n      Password: password\n    })\n\n    cognitoUser = new CognitoUser({\n      Username: email,\n      Pool: new CognitoUserPool(poolData)\n    })\n\n    return new Promise((resolve, reject) => {\n      cognitoUser.authenticateUser(authenticationDetails, {\n        onSuccess: (result) => {\n\n          AWS.config.credentials = new AWS.CognitoIdentityCredentials({\n            IdentityPoolId: cognitoIdentityPoolId,\n            Logins: {\n              [getCognitoLoginKey()]: result.getIdToken().getJwtToken()\n            }\n          })\n\n          AWS.config.credentials.refresh((error) => {\n            if (error) {\n              console.error(error)\n            } else {\n              initApiGatewayClient(AWS.config.credentials)\n\n              apiGatewayClient().then(apiGatewayClient => \n                apiGatewayClient.post('/signin', {}, {}, {})\n                  .then(resolve)\n                  .catch(reject)\n              )\n            }\n          })\n        },\n\n        onFailure: reject\n    })\n  })\n}\n\nexport function logout() {\n  if (cognitoUser) {\n    cognitoUser.signOut()\n    cognitoUser = null\n    store.subscriptions = []\n    localStorage.clear()\n  }\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\n// semantic-ui\nimport { Menu, Loader } from 'semantic-ui-react'\n\n// store\nimport { observer } from 'mobx-react'\nimport { store } from 'services/state'\n\nexport default observer(class ApisMenu extends React.Component {\n  isActive = (apiId, index) => {\n    let apiIdInPath = this.props.path.params.apiId\n    return (apiIdInPath) ? apiId === apiIdInPath : (index === 0)\n  }\n\n  render() {\n    const { path, ...props } = this.props\n    return (\n      <Menu\n        inverted\n        vertical\n        attached\n        style={{ margin: 0, borderRadius: 0 }}\n        {...props}\n      >\n        {!store.apiList ? (\n          <Loader active />\n        ) : (store.apiList && (\n          store.apiList.length ? store.apiList.map((api, index) => (\n            <Menu.Item\n              key={api.id}\n              as={Link}\n              to={`/apis/${api.id}`}\n              active={this.isActive(api.id, index)}\n            >\n              {api.swagger.info.title}\n            </Menu.Item>\n          )) : (\n            <p style={{ padding: \"13px 16px\", color: \"whitesmoke\" }}>No APIs Published</p>\n          )\n        ))}\n      </Menu>\n    )\n  }\n})\n","import React from 'react'\n\n// semantic-ui\nimport { Button, Header, Image, Container } from 'semantic-ui-react'\n\n// services\nimport { subscribe, unsubscribe } from 'services/api-catalog'\nimport { isAuthenticated } from 'services/self'\n\n// state\nimport { observer } from 'mobx-react'\nimport { store } from 'services/state.js'\n\n// Create the plugin that provides our layout component\nexport const SwaggerLayoutPlugin = () => ({ components: { InfoContainer: InfoReplacement } })\n\n// replaces the InfoContainer component\n// https://github.com/swagger-api/swagger-ui/blob/dd3afdc45656bda2a64ae6a7f9bdad006ea98149/src/core/components/layouts/base.jsx\n\nconst InfoReplacement = observer(({ specSelectors }) => {\n  const basePath = specSelectors.basePath()\n  const host = specSelectors.host()\n  const externalDocs = specSelectors.externalDocs()\n\n  return (\n    <Container fluid textAlign='left' className=\"fixfloat\" style={{ padding: \"40px 0px\" }}>\n      <div style={{ display: \"flex\" }}>\n        <div style={{ flex: \"0 0 auto\", marginRight: \"20px\" }}>\n          <Image size='small' src={store.api.logo} />\n        </div>\n        <div>\n          <Header as='h1'>{store.api.swagger.info.title}</Header>\n          <div style={{ display: \"flex\" }}>\n            <div style={{ marginRight: \"20px\" }}>\n              <p style={{ fontWeight: \"bold\" }}>Version</p>\n              <p style={{ fontWeight: \"bold\" }}>Endpoint</p>\n              {/* <p style={{ fontWeight: \"bold\" }}>Usage Plan</p> */}\n            </div>\n            <div>\n              <p>{store.api.swagger.info.version}</p>\n              <p>https://{host}{basePath}</p>\n              {/* <p>{store.api.usagePlan.name}</p> */}\n            </div>\n          </div>\n          <p>{externalDocs}</p>\n          <SubscriptionButtons />\n        </div>\n      </div>\n    </Container>\n  )\n})\n\nconst SubscriptionButtons = observer(class SubscriptionButtons extends React.Component {\n  state = {}\n\n  render() {\n    const { api } = store\n    return (\n      (api && isAuthenticated()) ? (\n        api.subscribed ? (\n          <Button onClick={() => unsubscribe(api.usagePlan.id)}>Unsubscribe</Button>\n        ) : (\n          <Button onClick={() => subscribe(api.usagePlan.id)} >Subscribe</Button>\n        )\n      ) : null\n    )\n  }\n})\n\n\nexport default SwaggerLayoutPlugin","import React from 'react'\n\n// swagger-ui\nimport SwaggerUI from 'swagger-ui'\nimport 'swagger-ui/dist/swagger-ui.css'\n\n// semantic-ui\nimport { Container, Header, Icon } from 'semantic-ui-react'\n\n// services\nimport { getApi } from 'services/api-catalog'\nimport { isAuthenticated } from 'services/self'\n\n// components\nimport ApisMenu from 'components/ApisMenu'\nimport SwaggerLayoutPlugin from 'components/SwaggerUiLayout'\n\n// state\nimport { store } from 'services/state.js'\nimport { observer } from 'mobx-react'\n\nexport default observer(class ApisPage extends React.Component {\n  componentDidMount() { this.updateApi() }\n  componentDidUpdate() { this.updateApi() }\n\n  updateApi = () => {\n    getApi(this.props.match.params.apiId || 'ANY', true)\n      .then(api => {\n        if (api) {\n          let swaggerUiConfig = {\n            dom_id: '#swagger-ui-container',\n            plugins: [SwaggerLayoutPlugin],\n            supportedSubmitMethods: [],\n            spec: api.swagger,\n            onComplete: () => uiHandler.preauthorizeApiKey(\"api_key\", store.apiKey)\n          }\n          if (isAuthenticated()) {\n            delete swaggerUiConfig.supportedSubmitMethods\n          }\n          let uiHandler = SwaggerUI(swaggerUiConfig)\n        }\n      })\n  }\n\n  render() {\n    let errorHeader\n    let errorBody \n\n    if (store.apiList && store.apiList.length === 0) {\n      errorHeader = `No APIs Published`\n      errorBody = `Your administrator hasn't added any APIs to your account. Please contact them to publish an API.`\n    } else if (!store.api && store.apiList && store.apiList.length) {\n      errorHeader = `No Such API`\n      errorBody = `The selected API doesn't exist.`\n    }\n\n    return (\n      <div style={{ display: \"flex\", flex: \"1 1 auto\", overflow: \"hidden\" }}>\n        <ApisMenu path={this.props.match} style={{ flex: \"0 0 auto\" }} />\n        <div className=\"swagger-section\" style={{ flex: \"1 1 auto\", overflow: 'auto' }}>\n          <div className=\"swagger-ui-wrap\" id=\"swagger-ui-container\" style={{ padding: \"0 20px\" }}>\n            {errorHeader && errorBody && (\n              <React.Fragment>\n                <Header as='h2' icon textAlign=\"center\" style={{ padding: \"40px 0px\" }}>\n                  <Icon name='warning sign' circular />\n                  <Header.Content>{errorHeader}</Header.Content>\n                </Header>\n                <Container text textAlign='justified'>\n                  <p>{errorBody}</p>\n                </Container>\n              </React.Fragment>\n            )}\n          </div>\n        </div>\n      </div>\n    )\n  }\n})\n","import React from 'react'\nimport { Message } from 'semantic-ui-react'\n\nexport default class AlertPopup extends React.Component {\n  state = {\n    isVisible: false,\n    message: ''\n  }\n\n  handleDismiss = () => {\n    this.setState({ isVisible: false })\n  }\n\n  render() {\n      return (\n        <Message\n          hidden={!this.state.isVisible}\n          negative\n          floating\n          icon='warning sign'\n          onDismiss={this.handleDismiss}\n          header='Error'\n          content={this.state.message}\n        />\n      )\n  }\n}\n","import React from 'react'\nimport { Button, Form, Message, Modal } from 'semantic-ui-react'\nimport { Redirect } from 'react-router-dom'\nimport { login } from 'services/self'\nimport { confirmMarketplaceSubscription } from 'services/api-catalog'\n\n export default class SignIn extends React.Component {\n   state = {\n     isSubmitting: false,\n     signedIn: false,\n     errorMessage: '',\n     isOpen: false\n   }\n   open = () => this.setState({ isSubmitting: false, errorMessage: '', isOpen: true })\n   close = () => this.setState({ isOpen: false })\n\n   handleChange = (event, { name, value }) => this.setState({ [name]: value })\n   handleLogin = (event) => {\n    event.preventDefault()\n    this.setState({isSubmitting: true})\n\n    login(this.state.email, this.state.password)\n    .then(() => {\n        this.setState({signedIn: true, isSubmitting: false, errorMessage: ''})\n\n        const { usagePlanId, token } = this.props\n\n        if (usagePlanId && token) {\n   \t       return confirmMarketplaceSubscription(usagePlanId, token)\n        }\n    })\n    .catch((e) => this.setState({errorMessage: e.message, isSubmitting: false}))\n  }\n\n  render() {\n    const { isOpen } = this.state\n\n    return this.state.signedIn ? <Redirect to='/apis' /> : (\n      <Modal\n        size='small'\n        open={isOpen}\n        onOpen={this.open}\n        onClose={this.close}\n        trigger={this.props.trigger}\n      >\n        <Modal.Header>Sign in</Modal.Header>\n        <Modal.Content>\n          <Form onSubmit={this.handleLogin} error={!!this.state.errorMessage} loading={this.state.isSubmitting}>\n            <Form.Input label='Email' name='email' onChange={this.handleChange} />\n            <Form.Input type='password' label='Password' name='password' autoComplete='false' onChange={this.handleChange} />\n            <Message error content={this.state.errorMessage} />\n            <Modal.Actions style={{textAlign: 'right'}}>\n              <Button type='button' onClick={this.close}>Close</Button>\n              <Button primary type='submit'>Sign In</Button>\n            </Modal.Actions>\n          </Form>\n        </Modal.Content>\n      </Modal>)\n  }\n}\n","import React from 'react'\nimport { Button, Form, Message, Modal } from 'semantic-ui-react'\nimport { Redirect } from 'react-router-dom'\nimport { register } from 'services/self'\nimport { confirmMarketplaceSubscription } from 'services/api-catalog'\n\n export default class Register extends React.Component {\n  state = {\n    isSubmitting: false,\n    signedIn: false,\n    errorMessage: '',\n    isOpen: false\n  }\n\n  open = () => this.setState({ isSubmitting: false, errorMessage: '', isOpen: true })\n  close = () => this.setState({ isOpen: false })\n\n  handleChange = (event, { name, value }) => this.setState({ [name]: value })\n  handleRegister = (event) => {\n    event.preventDefault()\n    this.setState({ isSubmitting: true })\n\n    register(this.state.email, this.state.password)\n    .then(() => {\n        this.setState({signedIn: true, isSubmitting: false, errorMessage: ''})\n\n        const { usagePlanId, token } = this.props\n\n        if (usagePlanId && token) {\n   \t       return confirmMarketplaceSubscription(usagePlanId, token)\n        }\n    })\n    .catch((e) => this.setState({errorMessage: e.message, isSubmitting: false}))\n  }\n\n  render() {\n    const { isOpen } = this.state\n\n    return this.state.signedIn ? <Redirect to='/apis' /> : (\n      <Modal\n        size='small'\n        open={isOpen}\n        onOpen={this.open}\n        onClose={this.close}\n        trigger={this.props.trigger}\n      >\n        <Modal.Header>Register</Modal.Header>\n        <Modal.Content>\n          <Form onSubmit={this.handleRegister} error={!!this.state.errorMessage} loading={this.state.isSubmitting}>\n            <Form.Input label='Email' name='email' onChange={this.handleChange} />\n            <Form.Input type='password' label='Password' name='password' autoComplete='false' onChange={this.handleChange} />\n            <Message error content={this.state.errorMessage} />\n            <Modal.Actions style={{textAlign: 'right'}}>\n              <Button type='button' onClick={this.close}>Close</Button>\n              <Button primary type='submit'>Register</Button>\n            </Modal.Actions>\n          </Form>\n        </Modal.Content>\n      </Modal>)\n    }\n}\n","import React from 'react'\nimport { Redirect} from 'react-router-dom'\nimport { logout, isAuthenticated } from 'services/self'\n\nexport default class SignOut extends React.Component {\n  logout = () => {\n    logout()\n    this.forceUpdate()\n  }\n\n  render() {\n    return isAuthenticated() ? (\n      React.cloneElement( this.props.trigger, { onClick: this.logout })\n    ) : (\n      <Redirect to='/' />\n    )\n  }\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Menu, Image } from 'semantic-ui-react'\n\nimport { isAuthenticated } from 'services/self'\n\n// mobx\nimport { observer } from 'mobx-react'\n\n// fragments\nimport { fragments } from 'services/get-fragments'\n\n// components\nimport SignIn from './SignIn'\nimport Register from './Register'\nimport SignOut from './SignOut'\n\nexport const NavBar = observer(() => {\n  let authed = isAuthenticated()\n  return (\n    <Menu inverted borderless attached style={{ flex: \"0 0 auto\" }}>\n      <Menu.Item as={Link} to=\"/\">\n        <Image size='mini' src=\"/custom-content/nav-logo.png\" style={{ paddingRight: \"10px\" }} />\n        {fragments.Home.title}\n      </Menu.Item>\n      <Menu.Item as={Link} to=\"/getting-started\">{fragments.GettingStarted.title}</Menu.Item>\n      <Menu.Item as={Link} to=\"/apis\">{fragments.APIs.title}</Menu.Item>\n      <Menu.Menu position=\"right\">\n        { authed ? (\n          <React.Fragment>\n            <SignOut trigger={<Menu.Item as=\"a\" key=\"logout\">Sign Out</Menu.Item>} />\n            <Menu.Item as={Link} to=\"/dashboard\" key=\"dashboard\">My Dashboard</Menu.Item>\n          </React.Fragment>\n        ) : (\n          <React.Fragment>\n            <SignIn trigger={<Menu.Item as=\"a\" key=\"login\">Sign In</Menu.Item>} />\n            <Register trigger={<Menu.Item as=\"a\" key=\"register\">Register</Menu.Item>} /> \n          </React.Fragment>\n        )}\n      </Menu.Menu>\n    </Menu>\n  )\n})\n\nexport default NavBar\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\n\n// content-fragments (import here to start this ASAP)\nimport 'services/get-fragments'\n\n// semantic-ui\nimport 'semantic-ui-css/semantic.css'\n\n// pages\nimport Home from 'pages/Home'\nimport GettingStarted from 'pages/GettingStarted'\nimport Dashboard from 'pages/Dashboard'\nimport Apis from 'pages/Apis'\n\n// components\nimport AlertPopup from 'components/AlertPopup'\nimport NavBar from 'components/NavBar'\n\nimport { init } from 'services/self'\nimport './index.css';\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    init()\n\n    // We are using an S3 redirect rule to prefix the url path with #!\n    // This then converts it back to a URL path for React routing\n    const hashRoute = window.location.hash.substring(2)\n    window.history.pushState({}, 'home page', hashRoute)\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n      <React.Fragment>\n        <NavBar />\n        <AlertPopup />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/getting-started\" component={GettingStarted} />\n          <Route path=\"/dashboard\" component={Dashboard} />\n          <Route exact path=\"/apis\" component={Apis} />\n          <Route path=\"/apis/:apiId\" component={Apis} />\n          <Route component={() => <h2>Page not found</h2>} />\n        </Switch>\n        </React.Fragment>\n      </BrowserRouter>\n    )\n  }\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}